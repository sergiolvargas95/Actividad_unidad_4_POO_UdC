/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package co.edu.udec.poo.views;

import co.edu.udec.poo.modelos.entidades.Book;
import co.edu.udec.poo.modelos.entidades.Loan;
import co.edu.udec.poo.modelos.entidades.User;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;

/**
 *
 * @author redhood
 */
public class ViewLoans extends javax.swing.JDialog {
    
    Loan loan;

    /**
     * Creates new form LoanView
     */
    public ViewLoans(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        FieldUsers = new javax.swing.JComboBox<>();
        FieldBooks = new javax.swing.JComboBox<>();
        FieldDateLoan = new javax.swing.JSpinner();
        buttonSave = new javax.swing.JButton();
        buttonSearch = new javax.swing.JButton();
        buttonEdit = new javax.swing.JButton();
        buttonDelete = new javax.swing.JButton();
        buttonCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/co/edu/udec/poo/views/icons/icons-loan.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Liberation Sans", 1, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Formulario Para Gestionar Prestamos");

        jLabel3.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        jLabel3.setText("usuario:");

        jLabel4.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        jLabel4.setText("Libros:");

        jLabel5.setFont(new java.awt.Font("Liberation Sans", 1, 15)); // NOI18N
        jLabel5.setText("Fecha de Prestamo:");

        FieldDateLoan.setModel(new javax.swing.SpinnerDateModel());

        buttonSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/co/edu/udec/poo/views/icons/icons8-guardar-30.png"))); // NOI18N
        buttonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSaveActionPerformed(evt);
            }
        });

        buttonSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/co/edu/udec/poo/views/icons/icon-busqueda-24.png"))); // NOI18N
        buttonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSearchActionPerformed(evt);
            }
        });

        buttonEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/co/edu/udec/poo/views/icons/icon-editar-24.png"))); // NOI18N
        buttonEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonEditActionPerformed(evt);
            }
        });

        buttonDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/co/edu/udec/poo/views/icons/icon-basura-24.png"))); // NOI18N
        buttonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteActionPerformed(evt);
            }
        });

        buttonCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/co/edu/udec/poo/views/icons/icons8-cancelar-32.png"))); // NOI18N
        buttonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(FieldUsers, 0, 407, Short.MAX_VALUE)
                    .addComponent(FieldBooks, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(FieldDateLoan))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addComponent(buttonCancel, javax.swing.GroupLayout.DEFAULT_SIZE, 87, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(buttonDelete, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buttonEdit, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(buttonSearch, javax.swing.GroupLayout.DEFAULT_SIZE, 82, Short.MAX_VALUE)
                .addGap(29, 29, 29)
                .addComponent(buttonSave, javax.swing.GroupLayout.DEFAULT_SIZE, 85, Short.MAX_VALUE)
                .addGap(23, 23, 23))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(FieldUsers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(FieldBooks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(FieldDateLoan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 97, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(buttonCancel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(buttonSave, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(buttonSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(buttonEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(buttonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(72, 72, 72))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 602, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSaveActionPerformed
        String selectedUserName = (String) FieldUsers.getSelectedItem();
        String selectedBookTitle = (String) FieldBooks.getSelectedItem();   
        
        Date loanDate = (Date) FieldDateLoan.getValue();
        
        Map<String, User> userMap = (Map<String, User>) FieldUsers.getClientProperty("userMap");
        Map<String, Book> bookMap = (Map<String, Book>) FieldBooks.getClientProperty("bookMap");
        
        User selectedUser = userMap.get(selectedUserName);
        Book selectedBook = bookMap.get(selectedBookTitle);
        
        if (selectedUserName == null) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar un usuario.");
            return;
        }

        if (selectedBookTitle == null) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar al menos un libro.");
            return;
        }

        if (loanDate == null) {
            JOptionPane.showMessageDialog(this, "Las fechas son inválidas.");
            return;
        }
        
        Loan loan = new Loan();
        loan.setId(loan.generateLoanId());
        loan.setUser(selectedUser);
        if (loanDate != null) {
            LocalDate localLoanDate = loanDate.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();
            loan.setLoanDate(localLoanDate);
        } else {
            JOptionPane.showMessageDialog(this, "La fecha de préstamo no puede estar vacía.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        } 
        loan.setDueDate(LocalDate.now().plusWeeks(2));

        List<Book> books = new ArrayList<>();
        books.add(selectedBook);

        loan.setBooks(books);

        Loan.loansDB.put(String.valueOf(selectedUserName), loan);

        JOptionPane.showMessageDialog(this, "Préstamo guardado con éxito.");

        cleanFields();
    }//GEN-LAST:event_buttonSaveActionPerformed

    public void cleanFields() {
        FieldBooks.setSelectedIndex(-1);
        FieldUsers.setSelectedIndex(-1);
        FieldDateLoan.setValue(new Date());
    }
    
    private void buttonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeleteActionPerformed
        String selectedUserName = (String) FieldUsers.getSelectedItem();
        
        if (selectedUserName == null || selectedUserName.isEmpty()) {
            String msj = "Para eliminar un préstamo, debe seleccionar un usuario.";
            JOptionPane.showMessageDialog(this, msj);
            cleanFields();
            return;
        }

        if (!Loan.loansDB.containsKey(selectedUserName)) {
            String msj = "No se encontró un préstamo asociado a este usuario.";
            JOptionPane.showMessageDialog(this, msj);
            cleanFields();
            return;
        }

        String msj = "¿Seguro que desea eliminar el préstamo de este usuario?";
        int response = JOptionPane.showConfirmDialog(this, msj, "Confirmar", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);  

        if (response == JOptionPane.YES_OPTION) {
            Loan.loansDB.remove(selectedUserName);
            int total = Loan.loansDB.size(); 
            String mjs2 = "Préstamo eliminado con éxito.\nTotal de préstamos: " + total;
            JOptionPane.showMessageDialog(this, mjs2);
            cleanFields();
        }
    }//GEN-LAST:event_buttonDeleteActionPerformed

    private void buttonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelActionPerformed
        int option = JOptionPane.showConfirmDialog(this, "¿Desea cerrar?", "Confirmar", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if(option == JOptionPane.YES_OPTION) {
            this.dispose();
        }
    }//GEN-LAST:event_buttonCancelActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        FieldUsers.removeAllItems();
        FieldBooks.removeAllItems();
        
        Map<String, User> userMap = new HashMap<>();
        Map<String, Book> bookMap = new HashMap<>();
        
        for (User user : User.usersDB.values()) {
            FieldUsers.addItem(user.getName());  
            userMap.put(user.getName(), user);  
        }
        
        for (Book book : Book.booksDB.values()) {
            FieldBooks.addItem(book.getTitle());  
            bookMap.put(book.getTitle(), book);   
        }
        
        FieldUsers.putClientProperty("userMap", userMap);
        FieldBooks.putClientProperty("bookMap", bookMap);
    }//GEN-LAST:event_formWindowOpened

    private void buttonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSearchActionPerformed
        String selectedUserName = (String) FieldUsers.getSelectedItem();
          
        if (selectedUserName == null || selectedUserName.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor ingrese un nombre de usuario para buscar.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            return;
        }

        if (Loan.loansDB == null || Loan.loansDB.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No existen préstamos en la base de datos.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        if(Loan.loansDB.containsKey(selectedUserName)) {
            this.loan = Loan.loansDB.get(selectedUserName);
            
            FieldUsers.setSelectedItem(selectedUserName);
            
            if (loan.getBooks() != null && !loan.getBooks().isEmpty()) {
                FieldBooks.setSelectedItem(loan.getBooks().get(0).getTitle()); // Selecciona el título del primer libro
            } else {
                JOptionPane.showMessageDialog(this, "No hay libros asociados a este préstamo.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            }
            
            Date date = java.sql.Date.valueOf(loan.getLoanDate());
            FieldDateLoan.setValue(date);
            
            buttonDelete.setEnabled(true);
            buttonEdit.setEnabled(true);
        }  else {
            // Mensaje si no se encuentra el libro
            String msj = "No existe prestamo realizado al usuario " + selectedUserName;
            JOptionPane.showMessageDialog(this, msj, "Error", JOptionPane.ERROR_MESSAGE);
            cleanFields();
        }
    }//GEN-LAST:event_buttonSearchActionPerformed

    private void buttonEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonEditActionPerformed
        String selectedUserName = (String) FieldUsers.getSelectedItem();
        if (selectedUserName == null || selectedUserName.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Para editar primero debe buscar un préstamo.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            cleanFields();
            return;
        }

        if (!Loan.loansDB.containsKey(selectedUserName)) {
            String msj = "No se encontró un préstamo asociado al usuario especificado.";
            JOptionPane.showMessageDialog(this, msj, "Error", JOptionPane.ERROR_MESSAGE);
            cleanFields();
            return;
        }

        this.loan = Loan.loansDB.get(selectedUserName);

        if (this.loan == null) {
            JOptionPane.showMessageDialog(this, "No se encontró el préstamo en la base de datos.", "Error", JOptionPane.ERROR_MESSAGE);
            cleanFields();
            return;
        }

        String updatedBookTitle = (String) FieldBooks.getSelectedItem();
        Date updatedLoanDate = (Date) FieldDateLoan.getValue();


        if (updatedBookTitle == null || updatedBookTitle.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Debe seleccionar un libro válido.", "Advertencia", JOptionPane.WARNING_MESSAGE);
            return;
        }

        if (updatedLoanDate == null) {
            JOptionPane.showMessageDialog(this, "Las fechas son inválidas.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        Map<String, Book> bookMap = (Map<String, Book>) FieldBooks.getClientProperty("bookMap");
        Book updatedBook = bookMap.get(updatedBookTitle);
        if (updatedBook == null) {
            JOptionPane.showMessageDialog(this, "El libro seleccionado no es válido.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Actualiza los datos del préstamo
        this.loan.setBooks(Collections.singletonList(updatedBook)); // Reemplaza la lista de libros
        this.loan.setLoanDate(updatedLoanDate.toInstant().atZone(ZoneId.systemDefault()).toLocalDate());

        Loan.loansDB.put(selectedUserName, this.loan);

        JOptionPane.showMessageDialog(this, "El préstamo ha sido editado con éxito.", "Éxito", JOptionPane.INFORMATION_MESSAGE);

        cleanFields();
    }//GEN-LAST:event_buttonEditActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewLoans.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewLoans.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewLoans.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewLoans.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                ViewLoans dialog = new ViewLoans(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> FieldBooks;
    private javax.swing.JSpinner FieldDateLoan;
    private javax.swing.JComboBox<String> FieldUsers;
    private javax.swing.JButton buttonCancel;
    private javax.swing.JButton buttonDelete;
    private javax.swing.JButton buttonEdit;
    private javax.swing.JButton buttonSave;
    private javax.swing.JButton buttonSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
